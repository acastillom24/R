port= 9515L,
browserName = 'chrome',
chromever = '95.0.4638.17',
check = TRUE)
rD <- rsDriver(verbose = TRUE,
port= 9515L,
browserName = './chromedriver.exe',
chromever = '95.0.4638.17',
check = TRUE)
rD <- rsDriver(verbose = TRUE,
port= 9516L,
browserName = './chromedriver.exe',
chromever = '95.0.4638.17',
check = TRUE)
rD <- rsDriver(verbose = TRUE,
port= 9515L,
browserName = './chromedriver_94.0.4606.61.exe',
chromever = '94.0.4606.61',
check = TRUE)
rD <- rsDriver(verbose = TRUE,
port= 9518L,
browserName = './chromedriver_94.0.4606.61.exe',
chromever = '94.0.4606.61',
check = TRUE)
binman::list_versions
binman::list_versions("chromedriver")
rD <- rsDriver(browser=c("chrome"), chromever="94.0.4606.61", extraCapabilities = eCaps)
?rsDriver()
checkForServer()
file.path(find.package("RSelenium"), "examples/serverUtils")
binman :: list_versions ("seleniumserver")
list_versions ("chromedriver")
binman :: list_versions ("chromedriver")
binman :: list_versions ("geckodriver")
binman :: list_versions ("iedriverserver")
binman :: list_versions ("iedriverserver")
binman :: list_versions ("phantomjs")
rsDriver(browser = "chrome", version = "3.141.59", chromever = "94.0.4606.61", geckover = "0.29.0", check = T)
rsDriver(port = 9879L, browser = "chrome", version = "3.141.59", chromever = "94.0.4606.71", geckover = "0.29.0", check = T)
rsDriver(port = 9879L, browser = "chrome", version = "3.141.59", chromever = "94.0.4606.61", geckover = "0.29.0", check = T)
rD <- rsDriver(port = 9879L, browser = "chrome", version = "3.141.59", chromever = "94.0.4606.61", geckover = "0.29.0", check = T)
rD <- rsDriver(port = 9880L, browser = "chrome", version = "3.141.59", chromever = "94.0.4606.61", geckover = "0.29.0", check = T)
rD <- rsDriver(port = 9881L, browser = "chrome", version = "3.141.59", chromever = "94.0.4606.61", geckover = "0.29.0", check = T)
rD <- rsDriver(browser=c("chrome"), chromever="94.0.4606.61")
rD <- rsDriver(port = 9882L, browser=c("chrome"), chromever="94.0.4606.61")
gc()
remoteDriver$close()
rm(rD)
gc()
remDr$close()
install.packages("netstat", dependencies = T)
library(netstat)
free_port()
rD <- rsDriver(port = free_port(),
browser = c("chrome"),
chromever = "94.0.4606.61")
?free_port()
?free_port(Random)
free_port(Random)
free_port(random)
free_port(random = T)
kill = 'for /f "tokens=5" %a in (\'netstat -aon ^| find ":4444" ^| find "LISTENING"\') do taskkill /f /pid %a'
kill
shell(kill, ignore.stderr = TRUE, ignore.stdout = TRUE)
kill = 'for /f "tokens=5" %a in (\'netstat -aon ^| find ":9518" ^| find "LISTENING"\') do taskkill /f /pid %a'
shell(kill, ignore.stderr = TRUE, ignore.stdout = TRUE)
sessionInfo()
kill = 'for /f "tokens=5" %a in (\'netstat -aon ^| find ":9518" ^| find "LISTENING"\') do taskkill /f /pid %a'
shell(shell = kill, ignore.stderr = TRUE, ignore.stdout = TRUE)
## Option 2
system(paste0("Taskkill /F /T" ," /PID ", pid = rD$server$process$get_pid()))
## Option 1
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
?rsDriver
rD <- rsDriver(port = 9881L,
browser = c("chrome"),
chromever = "94.0.4606.61")
## Option 2
system(paste0("Taskkill /F /T" ," /PID ", pid = rD$server$process$get_pid()))
## Option 2
system(paste0("Taskkill /F /T" ," /PID ", pid = rD$server$process$get_pid()))
## Option 1
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
rD <- rsDriver(port = 4567L,
browser = c("chrome"),
chromever = "94.0.4606.61")
## Option 2
system(paste0("Taskkill /F /T" ," /PID ", pid = rD$server$process$get_pid()))
## Option 1
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
library(XML)
url <- "http://en.wikipedia.org/wiki/list_of_countries_by_population"
?readHTMLTable()
?readHTMLTable
popullation <- readHTMLTable(doc = url, which = 1)
url <- "http://en.wikipedia.org/wiki/list_of_countries_by_population"
popullation <- readHTMLTable(doc = url, which = 1)
library(XML)
url <- "https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population"
popullation <- readHTMLTable(doc = url, which = 1)
popullation <- readHTMLTable(doc = url, which = 1)
popullation <- readHTMLTable(url, which = 1)
library(rvest)
url <- "https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population"
my_html <- read_html(url)
my_tables <- html_nodes(my_html,"table")[[1]]
my_tables
populous_table <- html_table(my_tables)
populous_table <- populous_table[,-4:-6]
populous_table$Population <- as.numeric(gsub(",","",populous_table$Population))/100000
names(populous_table) = c("Rank","Country","Population")
library(lattice)
xyplot(Population ~ as.factor(Country), populous_table[1:10,],
scales = list(x = c(rot=60)),type="h",main="Most Densely Populated Countries")
my_html
View(my_html)
View(my_tables)
xml_child(my_tables, 1)
my_tables <- html_nodes(my_html,"table")[[1]]
my_tables
my_html
my_html <- session(url)
my_html
View(my_html)
my_tables <- html_nodes(my_html,"table")[[1]]
my_tables
populous_table <- html_table(my_tables)
populous_table
populous_table <- populous_table[,-4:-6]
populous_table
View(my_tables)
my_tables <- html_nodes(my_html,"table")
my_tables <- html_nodes(my_html,"table")[[1]]
populous_table <- html_table(my_tables)
populous_table <- populous_table[,-4:-6]
populous_table$Population <- as.numeric(gsub(",","",populous_table$Population))/100000
my_tables <- html_nodes(my_html,"table")[[1]]
populous_table <- html_table(my_tables)
populous_table <- populous_table[,-4:-6]
populous_table
my_tables <- html_nodes(my_html,"table")[[1]]
populous_table <- html_table(my_tables)
populous_table
-(7:8)
-c(7,8)
populous_table <- populous_table[,-(7:8)]
populous_table$Population <- as.numeric(gsub(",","",populous_table$Population))/100000
names(populous_table) = c("Rank","Country", "Region", "Population", "% Population", "Date update")
library(lattice)
xyplot(Population ~ as.factor(Country), populous_table[1:10,],
scales = list(x = c(rot=60)),type="h",main="Most Densely Populated Countries")
populous_table <- html_table(my_tables)
populous_table <- populous_table[-1,-(7:8)]
populous_table$Population <- as.numeric(gsub(",","",populous_table$Population))/100000
names(populous_table) = c("Rank","Country", "Region", "Population", "% Population", "Date update")
library(lattice)
xyplot(Population ~ as.factor(Country), populous_table[1:10,],
scales = list(x = c(rot=60)),type="h",main="Most Densely Populated Countries")
xyplot(Population ~ as.factor(Country),
populous_table[1:10,],
scales = list(x = c(rot=60)),
type="h",
main="Most Densely Populated Countries", xlab = "Country")
install.packages("dygraphs", dependencies = T)
library(dygraphs)
# Carga de bibliotecas ----------------------------------------------------
library(dygraphs)
install.packages("xts", dependencies = T)
library(xts)
library(dplyr)
library(dygraphs)
library(xts)
library(dplyr)
library(purrr)
# Establecemos el lugar de trabajo ----------------------------------------
rstudioapi::getActiveDocumentContext()$path
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Carga de los datoa ------------------------------------------------------
paths <- dir(path = "data/.csv$")
# Carga de los datoa ------------------------------------------------------
paths <- dir(path = "data/$.csv$")
# Carga de los datoa ------------------------------------------------------
paths <- dir(path = "\\.csv$")
# Carga de los datoa ------------------------------------------------------
paths <- dir(path = "\\.csv$")
paths
paths <- dir(pattern = "\\.csv$")
data_finanzas <- map_dfr(.x = paths, .f = read.csv, id = "path")
paths
data_finanzas <- map_dfr(.x = paths, .f = read.csv, id = "path")
data_finanzas <- map_dfr(.x = paths, .f = read.csv)
View(data_finanzas)
?map_dfr
data_finanzas <- map_dfr(.x = paths, .f = read.csv, .id = "path")
View(data_finanzas)
View(data_finanzas)
data_finanzas %>%
dplyr::group_nest(path)
s <- data_finanzas %>%
dplyr::group_nest(path)
View(s)
View(s[[2]][[1]])
names(s)
s$1
s$path
s[1]
s[[1]]
s[1][1]
View(s[[2]][[1]])
View(s[[2]][[2]])
s[[2]]
View(s)
s$data
s$data[[1]]
data_finanzas <- map_dfr(.x = paths, .f = read.csv, .id = "dist")
View(data_finanzas)
data_finanzas <- map_dfr(.x = paths, .f = read.csv, .id = "path")
paths
names(paths) <- paths
paths
data_finanzas <- map_dfr(.x = paths, .f = read.csv, .id = "path")
View(data_finanzas)
s <- data_finanzas %>%
dplyr::group_nest(path)
View(s)
View(s[[2]][[1]])
s <- data_finanzas %>%
dplyr::group_nest(.key = path)
s <- data_finanzas %>%
dplyr::group_nest(.tbl = path)
s <- data_finanzas %>%
dplyr::group_nest(keep = path)
View(s)
View(s[[1]][[1]])
s <- data_finanzas %>%
dplyr::group_nest(path)
View(s)
starwars %>%
group_nest(species, homeworld)
ss <- starwars %>%
group_nest(species, homeworld)
View(ss)
View(ss)
View(ss[[3]][[1]])
paths <- dir(pattern = "\\.csv$")
paths
dirname(paths)
rstudioapi::getActiveDocumentContext()$path
dirname(rstudioapi::getActiveDocumentContext()$path)
nameFiles <- gsub(pattern = ".csv", replacement = "", x = paths)
nameFiles
names(paths) <- nameFiles
paths
data_finanzas <- map_dfr(.x = paths, .f = read.csv, .id = "key")
dataFinanzas <- map_dfr(.x = paths, .f = read.csv, .id = "key")
View(data_finanzas)
View(dataFinanzas)
head(dataFinanzas)
dataFinanzas <- map_dfr(.x = paths, .f = read.csv, .id = "Company")
head(dataFinanzas)
summary(dataFinanzas)
head(dataFinanzas) # Mostramos los primeros registros cargados
library(ggplot2)
ggplot(data = dataFinanzas, mapping = aes(x = Date, y = Close))
max(data_finanzas$Close)
max(data_finanzas$Date)
ggplot(data = dataFinanzas, mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line()
install.packages("gcookbook")
library(gcookbook)
summary(tg)
str(tg)
dataFinanzas <- dataFinanzas %>% mutate(Company = as.factor(Company))
summary(dataFinanzas)
ggplot(data = dataFinanzas, mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line()
str(dataFinanzas)
dataFinanzas <- dataFinanzas %>% mutate(Company = as.factor(Company),
Date = as.Date(Date))
str(dataFinanzas)
ggplot(data = dataFinanzas, mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line()
ggplot(data = dataFinanzas, mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line() +
labs(color = "Legend")
ggplot(data = dataFinanzas, mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line()
ggplot(data = dataFinanzas, mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line() +
labs(color = "Legend")
paste("Closing Stock Prices:", nameFiles)
paste0(nameFiles)
ggplot(data = dataFinanzas,
mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line() +
ggtitle(paste("Closing Stock Prices:", paste0(",", nameFiles))) +
theme(plot.title = element_text(lineheight=.7, face="bold"))
paste0(",", nameFiles)
as.character(nameFiles)
paste0(",", nameFiles)
library(stringr)
str_c(nameFiles, sep = ",")
nameFiles
str_c(nameFiles, sep = ", ")
str_c(nameFiles, collapse = ", ")
ggplot(data = dataFinanzas,
mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line() +
ggtitle(paste("Closing Stock Prices:", str_c(nameFiles, collapse = ", "))) +
theme(plot.title = element_text(lineheight=.7, face="bold"))
ggplot(data = dataFinanzas,
mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line() +
ggtitle(paste("Closing Stock Prices:", str_c(nameFiles, collapse = ", ")))
ggplot(data = dataFinanzas,
mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line() +
ggtitle(paste("Closing Stock Prices:", str_c(nameFiles, collapse = ", "))) +
theme(plot.title = element_text(lineheight=.7, face="bold"))
ggplot(data = dataFinanzas,
mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line() +
ggtitle(paste("Closing Stock Prices:", str_c(nameFiles, collapse = ", "))) +
theme(plot.title = element_text(lineheight =.7, face = "bold"))
library(fs)
paths <- dir_ls(path = "data/", glob = "*.csv")
paths
paths <- setdiff(x = paths, y = "data/AMZN.csv")
paths
nameFiles <- gsub(pattern = "data/",
replacement = "",
x = gsub(pattern = ".csv",
replacement = "",
x = paths)) # Establecemos el nuevo nombre
nameFiles
paths
paths
paths
paths <- dir_ls(path = "data/", glob = "*.csv") # Listamos todos los archivos con extension .csv
paths <- setdiff(x = paths, y = "data/AMZN.csv") # Dejamos de lado la data de Amazon
nameFiles <- gsub(pattern = "data/",
replacement = "",
x = gsub(pattern = ".csv",
replacement = "",
x = paths)) # Establecemos el nuevo nombre
paths
nameFiles
dataFinanzas <- map_dfr(.x = paths, .f = read.csv, .id = "Company") # Cargamos todos los datos de las 5 companias
View(dataFinanzas)
paths <- dir_ls(path = "data/", glob = "*.csv") # Listamos todos los archivos con extension .csv
paths <- setdiff(x = paths, y = "data/AMZN.csv") # Dejamos de lado la data de Amazon
nameFiles <- gsub(pattern = "data/",
replacement = "",
x = gsub(pattern = ".csv",
replacement = "",
x = paths)) # Establecemos el nuevo nombre
names(as.vector(paths)) <- nameFiles # Reemplazamos los nombres del vector
as.vector(paths)
names(as.vector(paths)) <- nameFiles # Reemplazamos los nombres del vector
paths <- as.vector(paths)
paths
nameFiles
nameFiles
names(paths) <- nameFiles # Reemplazamos los nombres del vector
paths
dataFinanzas <- map_dfr(.x = paths, .f = read.csv, .id = "Company") # Cargamos todos los datos de las 5 companias
View(dataFinanzas)
dataFinanzas <- dataFinanzas %>% mutate(Company = as.factor(Company),
Date = as.Date(Date))
str(dataFinanzas)
ggplot(data = dataFinanzas,
mapping = aes(x = Date, y = Close, colour = Company)) +
geom_line() +
ggtitle(paste("Closing Stock Prices:", str_c(nameFiles, collapse = ", "))) +
theme(plot.title = element_text(lineheight =.7, face = "bold"))
dataFinanzas %>%
select(Company, Date, Close) %>%
group_by(Company, Date) %>%
summarise(Close = sum(Close)) %>%
xts(order.by = Date, frequency = 365)
dataFinanzas %>%
select(Company, Date, Close) %>%
group_by(Company, Date) %>%
summarise(Close = sum(Close))
dataFinanzas %>%
select(Company, Date, Close) %>%
group_by(Company, Date) %>%
summarise(Close = sum(Close)) %>%
xts(order.by = Date, frequency = 365)
dataFinanzas %>%
select(Company, Date, Close) %>%
group_by(Company, Date) %>%
summarise(Close = sum(Close)) %>%
xts(x = ., order.by = Date, frequency = 365)
xts(x = dataFinanzas$Close, order.by = Date, frequency = 365)
xts(x = dataFinanzas$Close, order.by = dataFinanzas$Date, frequency = 365)
dataFinanzas %>%
select(Company, Date, Close) %>%
order_by(Company, Date)
dataFinanzas %>%
select(Company, Date, Close) %>%
arrange(Company, Date)
xts(x = dataFinanzas$Close, order.by = dataFinanzas$Date, frequency = 365)
xts(x = dataFinanzas$Close, order.by = dataFinanzas$Date, frequency = 365)
dataFinanzas %>%
select(Company, Date, Close) %>%
arrange(Company, Date) %>% View(
dataFinanzas %>%
select(Company, Date, Close) %>%
arrange(Company, Date) %>% View()
nData <- dataFinanzas %>%
select(Company, Date, Close) %>%
arrange(Company, Date)
dygraph(data = nData, ylab = "Close", main="IBM and Linkedin Closing Stock Prices") %>%
dySeries(color = Company) %>%
dyRangeSelector()
?dygraph
dygraph(data = nData, ylab = "Close",
main="IBM and Linkedin Closing Stock Prices", group = Company) %>%
dySeries() %>%
dyRangeSelector()
dygraph(nData,xlab = "Day", ylab = "Close",
main="IBM and Linkedin Closing Stock Prices", group = Company)
nData <- dataFinanzas %>%
select(Date, Close, Company) %>%
arrange(Company, Date)
nData
dygraph(nData, ylab = "Close",
main="IBM and Linkedin Closing Stock Prices", group = Company) %>%
dySeries() %>%
dyRangeSelector()
as.xts(nData)
?xts
xts(x = nData, order.by = nData$Date, frequency = 365, unique = nData$Company)
nnData <- xts(x = nData, order.by = nData$Date, frequency = 365, unique = nData$Company)
dygraph(nnData, ylab = "Close",
main="IBM and Linkedin Closing Stock Prices", group = Company) %>%
dySeries() %>%
dyRangeSelector()
nnData
nnData <- xts(x = nData$Close, order.by = nData$Date, frequency = 365, unique = Company)
nData <- dataFinanzas %>%
select(Date, Close, Company) %>%
arrange(Company, Date)
nnData <- xts(x = nData$Close, order.by = nData$Date, frequency = 365, unique = Company)
nnData <- xts(x = nData$Close, order.by = nData$Date, frequency = 365)
nnData
View(nnData)
nData <- dataFinanzas %>%
select(Date, Close, Company) %>%
arrange(Company, Date)
nData
nnData <- xts(x = nData$Close, order.by = nData$Date, frequency = 365)
View(nnData)
nnData <- xts(nData$Close, order.by = nData$Date, frequency = 365)
View(nnData)
nData <- dataFinanzas %>%
select(Date, Close, Company) %>%
arrange(Company, Date)
str(nData)
nnData <- xts(nData$Close, order.by = nData$Date, frequency = 365, unique = nData$Company)
nnData
View(nnData)
nnData <- xts(nData$Close, order.by = nData$Date, frequency = 365, unique = F)
View(nnData)
library(tidyr)
head(dataFinanzas)
nData <- dataFinanzas %>%
select(Date, Close, Company)
nData
spread(data = nData, key = Company)
spread(data = nData, key = Company, value = Date)
spread(data = nData, key = Date, value = Company)
spread(data = nData, key = Date, value = Company) %>% View()
spread(data = nData, key = Company, value = Close) %>% View()
nData <- dataFinanzas %>%
select(Date, Close, Company) %>%
spread(key = Company, value = Close)
View(nData)
View(nData)
nnData <- xts(nData, order.by = nData$Date, frequency = 365)
View(nnData)
nnData <- xts(nData[,-1], order.by = nData$Date, frequency = 365)
View(nnData)
?dygraph
dygraph(nnData, ylab = "Close",
main="IBM and Linkedin Closing Stock Prices") %>%
dySeries() %>%
dyRangeSelector()
dataFinanzas_xts <- dataFinanzas %>%
select(Date, Close, Company) %>%
spread(key = Company, value = Close)
dataFinanzas_xts <- xts(nData[,-1], order.by = nData$Date, frequency = 365)
dygraph(data = dataFinanzas_xts,
ylab = "Close",
main = paste(str_c(nameFiles, collapse = ", "),": Closing Stock Prices")) %>%
dySeries() %>%
dyOptions(colors = c("blue","brown", "yellow", "black", "red")) %>%
dyRangeSelector()
dygraph(data = dataFinanzas_xts,
ylab = "Close",
main = paste(str_c(nameFiles, collapse = ", "),": Closing Stock Prices")) %>%
dySeries() %>%
# dyOptions(colors = c("blue","brown", "yellow", "black", "red")) %>%
dyRangeSelector()
dygraph(data = dataFinanzas_xts,
ylab = "Close",
main = paste("Closing Stock Prices:", str_c(nameFiles, collapse = ", "))) %>%
dySeries() %>%
# dyOptions(colors = c("blue","brown", "yellow", "black", "red")) %>%
dyRangeSelector()
