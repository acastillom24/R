# Carga de bibliotecas
library(readr)
library(readxl)
library(dplyr)
library(skimr)
library(naniar)
library(VIM) #KNN
library(ggplot2)


# Carga de datos
data_inventory <-  read_csv(file = "data_inventory.csv",show_col_types = F)

data_inventory %>% glimpse()

# Análisis de datos faltantes
## a) Analice la proporción de datos faltantes por tipo de atributo. Realice comentarios acerca de esta problemática.

data_inventory %>% 
  skim() %>% 
  select(skim_variable, n_missing, complete_rate) %>% 
  mutate(incomplete_rate = round((1 - complete_rate) * 100, 2)) %>% 
  arrange(-incomplete_rate) %>% 
  select(-complete_rate)
## b) Inputar los datos faltantes por métodos univariables y métodos multivariables. Explique las ventajas y desventajas de cada método aplicada a la data de inventarios.

### Imputación por la media

data_inventory_media <-  data_inventory %>% 
  impute_mean_at(.vars = c("Precio", "Estabilidad_suministro", "Lead_time"))


### Imputación por la mediana

data_inventory_mediana <- data_inventory %>% 
  impute_median_at(.vars = c("Precio", "Estabilidad_suministro", "Lead_time"))


## c) Realizar el análisis de outliers por métodos univariables y métodos multivariables. Explique las ventajas y desventajas de cada método aplicada a la data de inventarios.

### Análisis por el diagrama de cajas

data_inventory_media %>% 
  ggplot(mapping = aes(y = Demanda)) + 
  geom_boxplot()

data_inventory_media %>% 
  ggplot(mapping = aes(y = Precio)) + 
  geom_boxplot()

data_inventory_media %>% 
  ggplot(mapping = aes(y = Lead_time)) + 
  geom_boxplot()

data_inventory_media %>% 
  ggplot(mapping = aes(y = Estabilidad_suministro)) + 
  geom_boxplot()


## d) Realizar un análisis descriptivo de cada variable de la base preprocesada. Interprete.
### Atributo Lead Time

data_inventory_media %>% 
  group_by(Tipo_marketing, Tipo_archivo) %>% 
  summarise(min = min(Lead_time),
            p25 = quantile(Lead_time, probs = 0.25),
            media = round(mean(Lead_time), 2),
            mediana = median(Lead_time),
            p75 = quantile(Lead_time, probs = 0.75),
            max = max(Lead_time),
            sd = round(sd(Lead_time), 2))

### Atributo Demanda

data_inventory_media %>% 
  group_by(Tipo_marketing, Tipo_archivo) %>% 
  summarise(min = min(Demanda),
            p25 = quantile(Demanda, probs = 0.25),
            media = round(mean(Demanda), 2),
            mediana = median(Demanda),
            p75 = quantile(Demanda, probs = 0.75),
            max = max(Demanda),
            sd = round(sd(Demanda), 2))

### Atributo Precio

data_inventory_media %>% 
  group_by(Tipo_marketing, Tipo_archivo) %>% 
  summarise(min = min(Precio),
            p25 = quantile(Precio, probs = 0.25),
            media = round(mean(Precio), 2),
            mediana = median(Precio),
            p75 = quantile(Precio, probs = 0.75),
            max = max(Precio))

## e) Después de una semana que usted realiza el análisis de datos faltantes, le brindan la data que se recuperó del sistema, data_completa. ¿su imputación fue de calidad? Sustente.

data_completa <- read_excel(path = "data_completa.xlsx")

precio_na <- data_inventory %>% 
  filter(is.na(Precio)) %>% 
  select(Numero_SKU) %>% 
  as.vector()

data_completa_precio <- data_completa %>% 
  select(Numero_SKU, Precio) %>% 
  filter(Numero_SKU %in% precio_na$Numero_SKU)

data_error <- data_completa_precio %>% 
  left_join(data_inventory_media, by = c("Numero_SKU" = "Numero_SKU"))

data_error <- data_error %>% 
  mutate(dif = Precio.x - Precio.y)

summary(data_error$dif)
